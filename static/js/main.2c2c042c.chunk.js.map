{"version":3,"sources":["reportWebVitals.js","__data__/initialState.js","__data__/consts.js","__data__/reducers/linksReducer.js","__data__/reducers/index.js","__data__/store.js","components/link.jsx","__data__/actions/linkAction.js","__data__/externalSourceNEW.js","__data__/internalSources.js","__data__/platformNEW.js","__data__/deeplinksNEW.js","__data__/screen.js","components/platform.jsx","__data__/actions/platformAction.js","components/deeplink.jsx","__data__/actions/deeplinkAction.js","__data__/actions/screenAction.js","components/screen.jsx","__data__/actions/internalSourceAction.js","components/internalSource.jsx","__data__/actions/externalSourceAction.js","components/externalSource.jsx","components/qr.jsx","components/info.jsx","components/container.jsx","AppFunc.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialState","platform","deeplink","screen","internalSource","externalSource","web","deeplinkType","link","reset","ADD_PLATFORM","ADD_DEEPLINK","ADD_SCREEN","ADD_INTERNAL_SOURCE","ADD_EXTERNAL_SOURCE","WEB_ACTIVE","ADD_DEEPLINK_TYPE","ADD_LINK","RESET_DATA","LinksReducer","state","action","type","data","rootReducer","combineReducers","Links","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","Link","links","useSelector","path","dispatch","useDispatch","useEffect","href","target","rel","externalSourcesNEW","code","tab_id","name","externalSourcesWeb","internalSources","internalSourceWeb","platformNEW","id","base","appendCode","ext","platformWeb","deeplinksNEW","deeplinksWeb","param","options","screenWeb","Platform","isWeb","useState","activePlatform","setActivePlatform","handlePlatform","item","value","className","Typography","variant","component","FormControl","RadioGroup","map","FormControlLabel","control","Radio","label","onChange","checked","Deeplink","activeDeeplink","setActiveDeeplink","handleDeeplink","addDeeplinkType","addScreen","Screen","activeScreen","setActiveScreen","screenItems","find","addInternalSource","InternalSource","activeSource","setActiveSource","addExternalSource","ExternalSource","activeUtmSource","setActiveUtmSource","activeUtmMedium","setActiveUtmMedium","activeUtmCompaign","setActiveUtmCompaign","activeUtmContent","setActiveUtmContent","activeUtmTerm","setActiveUtmTerm","TextField","e","currentTarget","QrCode","Info","Container","AppFunc","setWeb","setReset","handleClick","bool","Button","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wBCPDQ,EAAe,CACxBC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRC,eAAgB,GAChBC,eAAgB,GAChBC,KAAK,EACLC,aAAc,cACdC,KAAM,GACNC,OAAO,GCTEC,EAAe,eACfC,EAAe,eACfC,EAAa,aACbC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAa,aACbC,EAAoB,oBACpBC,EAAW,WACXC,EAAa,aC4DXC,EAvDM,WAAmC,IAAlCC,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKZ,EACD,OAAO,2BACAU,GADP,IAEInB,SAAUoB,EAAOE,OAEzB,KAAKZ,EACD,OAAO,2BACAS,GADP,IAEIlB,SAAUmB,EAAOE,KACjBpB,OAAQ,KAEhB,KAAKS,EACD,OAAO,2BACAQ,GADP,IAEIjB,OAAQkB,EAAOE,OAEvB,KAAKV,EACD,OAAO,2BACAO,GADP,IAEIhB,eAAgBiB,EAAOE,KACvBlB,eAAgB,KAExB,KAAKS,EACD,OAAO,2BACAM,GADP,IAEIf,eAAgBgB,EAAOE,KACvBnB,eAAgB,KAExB,KAAKW,EACD,OAAO,2BACAK,GADP,IAEId,IAAKe,EAAOE,OAEpB,KAAKP,EACD,OAAO,2BACAI,GADP,IAEIb,aAAcc,EAAOE,OAE7B,KAAKN,EACD,OAAO,2BACAG,GADP,IAEIZ,KAAMa,EAAOE,OAErB,KAAKL,EACD,OAAO,2BACAlB,GADP,IAEIS,MAAOY,EAAOE,OAEtB,QACI,OAAOH,ICxDJI,EAJKC,YAAgB,CAChCC,MAAOP,ICFLQ,EAAmBC,OAAOC,qCAOjBC,EALDC,YACVP,EACAG,K,OCSWK,G,MAZF,WACT,IAAMC,EAAQC,aAAY,qBAAER,SACtBS,EAAI,UAAMF,EAAMhC,UAAZ,OAAuBgC,EAAM/B,UAA7B,OAAwC+B,EAAM9B,QAA9C,OAAuD8B,EAAM7B,gBAA7D,OAA8E6B,EAAM5B,gBACxF+B,EAAWC,cAIjB,OAHAC,qBAAU,WACNF,ECP2B,CAC/Bd,KAAML,EACNM,KDKqBY,MAClB,CAACC,EAAUD,IAEV,mBAAGI,KAAMJ,EAAMK,OAAO,SAASC,IAAI,aAAnC,SAAiDN,MEZ5CO,EAAqB,CAC9B,CACIC,KAAM,QACNC,OAAQ,EACRC,KAAM,gEAEV,CACIF,KAAM,iBACNC,OAAQ,EACRC,KAAM,QAEV,CACIF,KAAM,kBACNC,OAAQ,EACRC,KAAM,UAEV,CACIF,KAAM,gBACNC,OAAQ,EACRC,KAAM,OAkCV,CACIF,KAAM,QACNC,OAAQ,EACRC,KAAM,+CAIDC,EAAqB,CAC9B,CACIH,KAAM,QACNC,OAAQ,EACRC,KAAM,gEAEV,CACIF,KAAM,QACNC,OAAQ,EACRC,KAAM,qGAEV,CACIF,KAAM,WACNC,OAAQ,EACRC,KAAM,8CAEV,CACIF,KAAM,KACNC,OAAQ,EACRC,KAAM,0DAEV,CACIF,KAAM,WACNC,OAAQ,GACRC,KAAM,4BAEV,CACIF,KAAM,QACNC,OAAQ,GACRC,KAAM,+CCzFDE,EAAkB,CAC3B,CACIJ,KAAM,GACNC,OAAQ,EACRC,KAAM,yFAEV,CACIF,KAAM,sBACNC,OAAQ,EACRC,KAAM,oFAEV,CACIF,KAAM,yBACNC,OAAQ,EACRC,KAAM,oNAEV,CACIF,KAAM,4BACNC,OAAQ,EACRC,KAAM,qGAEV,CACIF,KAAM,yBACNC,OAAQ,EACRC,KAAM,iEAEV,CACIF,KAAM,uBACNC,OAAQ,EACRC,KAAM,6EAEV,CACIF,KAAM,qBACNC,OAAQ,EACRC,KAAM,6EAEV,CACIF,KAAM,cACNC,OAAQ,EACRC,KAAM,8EAEV,CACIF,KAAM,oBACNC,OAAQ,EACRC,KAAM,6HAEV,CACIF,KAAM,+BACNC,OAAQ,GACRC,KAAM,iEAEV,CACIF,KAAM,YACNC,OAAQ,GACRC,KAAM,sQAEV,CACIF,KAAM,UACNC,OAAQ,GACRC,KAAM,iEAEV,CACIF,KAAM,OACNC,OAAQ,GACRC,KAAM,iGAIDG,EAAoB,CAC7B,CACIL,KAAM,GACNC,OAAQ,GACRC,KAAM,yFAEV,CACIF,KAAM,WACNC,OAAQ,GACRC,KAAM,+FAEV,CACIF,KAAM,UACNC,OAAQ,GACRC,KAAM,8CAEV,CACIF,KAAM,cACNC,OAAQ,GACRC,KAAM,iEAEV,CACIF,KAAM,gBACNC,OAAQ,GACRC,KAAM,4HAEV,CACIF,KAAM,cACNC,OAAQ,GACRC,KAAM,8ECjGDI,EAAc,CACvB,CACIC,GAAI,eACJN,OAAQ,EACRC,KAAM,mCACNM,KAAM,iEACNC,YAAY,EACZC,IAAK,UAET,CACIH,GAAI,eACJN,OAAQ,EACRC,KAAM,mCACNM,KAAM,6EACNC,YAAY,EACZC,IAAK,UAET,CACIH,GAAI,MACJN,OAAQ,EACRC,KAAM,MACNM,KAAM,oBACNC,YAAY,EACZC,IAAK,WAyBAC,EAAc,CACvB,CACIJ,GAAI,MACJN,OAAQ,EACRC,KAAM,MACNM,KAAM,iDACNC,YAAY,EACZC,IAAK,UCvDAE,EAAe,CACxB,CACIL,GAAI,cACJN,OAAQ,EACRC,KAAM,6CACNV,KAAM,mBAEV,CACIe,GAAI,MACJN,OAAQ,EACRC,KAAM,sEACNV,KAAM,8BAEV,CACIe,GAAI,QACJN,OAAQ,EACRC,KAAM,gEACNV,KAAM,gCAIDqB,EAAe,CACxB,CACIN,GAAI,iBACJN,OAAQ,EACRC,KAAM,6CACNV,KAAM,KC1BDhC,EAAS,CAClB,CACIwC,KAAM,cACNE,KAAM,6CACNY,MAAO,gBACPC,QAAS,CACL,CACIf,KAAM,qBACNC,OAAQ,EACRC,KAAM,4JAEV,CACIF,KAAM,aACNC,OAAQ,EACRC,KAAM,wHAEV,CACIF,KAAM,eACNC,OAAQ,EACRC,KAAM,qIACV,CACIF,KAAM,eACNC,OAAQ,EACRC,KAAM,+IACV,CACIF,KAAM,mBACNC,OAAQ,EACRC,KAAM,uHAEV,CACIF,KAAM,gBACNC,OAAQ,EACRC,KAAM,oFAEV,CACIF,KAAM,qBACNC,OAAQ,EACRC,KAAM,yFAEV,CACIF,KAAM,qBACNC,OAAQ,EACRC,KAAM,qGAEV,CACIF,KAAM,0BACNC,OAAQ,EACRC,KAAM,2GAEV,CACIF,KAAM,0BACNC,OAAQ,GACRC,KAAM,+JAIlB,CACIF,KAAM,MACNE,KAAM,sEACNY,MAAO,cACPC,QAAS,CACL,CACIf,KAAM,iBACNC,OAAQ,GACRC,KAAM,iJAEV,CACIF,KAAM,eACNC,OAAQ,GACRC,KAAM,uJAEV,CACIF,KAAM,gBACNC,OAAQ,GACRC,KAAM,6HAEV,CACIF,KAAM,mBACNC,OAAQ,GACRC,KAAM,kKAEV,CACIF,KAAM,iBACNC,OAAQ,GACRC,KAAM,2GAEV,CACIF,KAAM,mBACNC,OAAQ,GACRC,KAAM,yKAEV,CACIF,KAAM,aACNC,OAAQ,GACRC,KAAM,+EAIlB,CACIF,KAAM,QACNE,KAAM,gEACNY,MAAO,cACPC,QAAS,CACL,CACIf,KAAM,qBACNC,OAAQ,GACRC,KAAM,kMAEV,CACIF,KAAM,gBACNC,OAAQ,GACRC,KAAM,0KAEV,CACIF,KAAM,iBACNC,OAAQ,GACRC,KAAM,oKAEV,CACIF,KAAM,qBACNC,OAAQ,GACRC,KAAM,oOAMTc,EAAY,CACrB,CACIhB,KAAM,iBACNE,KAAM,6CACNY,MAAO,SACPC,QAAS,CACL,CACIf,KAAM,cACNC,OAAQ,GACRC,KAAM,+J,6CCpFPe,EA9CE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACkBC,mBAAS,GAD3B,mBACnBC,EADmB,KACHC,EADG,KAEpB5B,EAAWC,cAEXG,EAASqB,EAAQP,EAAcL,EAE/BgB,EAAiB,SAACC,GCVD,IAACC,EDWpBH,EAAkBE,EAAKtB,QACvBR,GCZoB+B,EDYCD,EAAKf,KCZK,CACnC7B,KAAMZ,EACNa,KAAM4C,KDWa,QAAZD,EAAKhB,IACJd,ECTsB,CAC9Bd,KAAMP,EACNQ,MAAM,KDWN,OACI,sBAAK6C,UAAW,QAAhB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,oEAGA,qBAAKH,UAAW,gBAAhB,SACI,cAACI,EAAA,EAAD,CAAaD,UAAU,WAAvB,SACI,cAACE,EAAA,EAAD,CACI5B,KAAMgB,EAAQ,cAAgB,cADlC,SAGKrB,EAAOkC,KAAI,SAACR,GACT,OAEI,qBAAKE,UAAW,aAAhB,SACI,cAACO,EAAA,EAAD,CACIR,MAAOD,EAAKhB,GACZ0B,QAAS,cAACC,EAAA,EAAD,IACTC,MAAOZ,EAAKrB,KACZK,GAAE,aAAQgB,EAAKhB,IACf6B,SAAU,kBAAMd,EAAeC,IAC/Bc,QAASd,EAAKtB,SAAWmB,KAPEG,EAAKhB,iBEsBzD+B,EAhDE,SAAC,GAAa,IAAZpB,EAAW,EAAXA,MACTpD,EAAQyB,aAAY,qBAAER,MAAiBjB,SADnB,EAEkBqD,mBAASrD,EAAQ,EAAI,MAFvC,mBAEnByE,EAFmB,KAEHC,EAFG,KAGpB/C,EAAWC,cAEXG,EAASqB,EAAQL,EAAcD,EAE/B6B,EAAiB,SAAClB,GCZD,IAACC,EDapBgB,EAAkBjB,EAAKhB,IACvBd,GCdoB+B,EDcCD,EAAK/B,KCdK,CACnCb,KAAMX,EACNY,KAAM4C,KDaF/B,ECVuB,SAAC+B,GAAD,MAAY,CACvC7C,KAAMN,EACNO,KAAM4C,GDQOkB,CAAgBnB,EAAKhB,MAGlC,OACQ,sBAAKkB,UAAW,QAAhB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,iFAIA,qBAAKH,UAAW,gBAAhB,SACI,cAACI,EAAA,EAAD,CAAaD,UAAU,WAAvB,SACI,cAACE,EAAA,EAAD,CACI5B,KAAMgB,EAAQ,YAAc,YADhC,SAGKrB,EAAOkC,KAAI,SAACR,GACT,OAEI,qBAAKE,UAAW,aAAhB,SACI,cAACO,EAAA,EAAD,CACIR,MAAOD,EAAK/B,KACZyC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAOZ,EAAKrB,KACZK,GAAE,aAAQgB,EAAKhB,IACf6B,SAAU,kBAAMK,EAAelB,IAC/Bc,QAASd,EAAKhB,KAAOgC,KAPMhB,EAAKhB,iBEhC/DoC,EAAY,SAACnB,GAAD,MAAY,CACjC7C,KAAMV,EACNW,KAAM4C,ICsDKoB,EApDA,SAAC,GAAa,IAAZ1B,EAAW,EAAXA,MACPpD,EAAQyB,aAAY,qBAAER,MAAiBjB,SADrB,EAEgBqD,mBAASrD,EAAQ,EAAI,MAFrC,mBAEjB+E,EAFiB,KAEHC,EAFG,KAGlBlF,EAAe2B,aAAY,qBAAER,MAAiBnB,gBAE9C6B,EAAWC,cACXG,EAASqB,EAAQF,EAAYxD,EAC7BuF,EAAc7B,EAChBrB,EAAOmD,MAAK,SAAAzB,GAAI,MAAkB,mBAAdA,EAAKvB,QACzBH,EAAOmD,MAAK,SAAAzB,GAAI,OAAIA,EAAKvB,OAASpC,KAWtC,OACI,sBAAK6D,UAAW,QAAhB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,4CAGA,qBAAKH,UAAW,gBAAhB,SACI,cAACI,EAAA,EAAD,CAAaD,UAAU,WAAvB,SACI,cAACE,EAAA,EAAD,CACI5B,KAAMgB,EAAQ,YAAc,YADhC,SAGK6B,EAAYhC,QAAQgB,KAAI,SAACR,GACtB,OAEI,qBAAKE,UAAW,aAAhB,SACI,cAACO,EAAA,EAAD,CACIR,MAAOD,EAAKvB,KACZiC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAOZ,EAAKrB,KACZK,GAAE,aAAQgB,EAAKvB,MACfoC,SAAU,kBA5BvB,SAACb,GACpBuB,EAAgBvB,EAAKvB,MAEjBP,EAASkD,EADVzB,EACoB,IAAD,OAAK6B,EAAYjC,MAAjB,eAA6BS,EAAKvB,MAEjC,IAAD,OAAK+C,EAAYjC,MAAjB,YAA0BS,EAAKvB,QAuBLyC,CAAelB,IAC/Bc,QAASd,EAAKvB,OAAS6C,KAPItB,EAAKvB,mBCrC3DiD,EAAoB,SAACzB,GAAD,MAAY,CACzC7C,KAAMT,EACNU,KAAM4C,ICqDK0B,EAnDQ,SAAC,GAAa,IAAZhC,EAAW,EAAXA,MACfpD,EAAQyB,aAAY,qBAAER,MAAiBjB,SADb,EAEQqD,mBAASrD,EAAO,EAAI,MAF5B,mBAEzBqF,EAFyB,KAEXC,EAFW,KAG1B3D,EAAWC,cAEXG,EAASqB,EAAQb,EAAoBD,EAc3C,OACI,sBAAKqB,UAAW,QAAhB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,qHAGA,qBAAKH,UAAW,gBAAhB,SACI,cAACI,EAAA,EAAD,CAAaD,UAAU,WAAvB,SACI,cAACE,EAAA,EAAD,CACI5B,KAAMgB,EAAQ,oBAAsB,oBADxC,SAGKrB,EAAOkC,KAAI,SAACR,GACT,OAEI,qBAAKE,UAAW,aAAhB,SACI,cAACO,EAAA,EAAD,CACIR,MAAOD,EAAKvB,KACZiC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAOZ,EAAKrB,KACZK,GAAE,aAAQgB,EAAKvB,MACfoC,SAAU,kBA/BvB,SAACb,GACpB6B,EAAgB7B,EAAKvB,MACJ,KAAduB,EAAKvB,MAAgBkB,EAGpBzB,EAASwD,EADF/B,EACoB,SAAD,OAAUK,EAAKvB,MAEd,KAJ3BP,EAASwD,EAAkB,oBAAD,OAAqB1B,EAAKvB,QA4BRyC,CAAelB,IAC/Bc,QAASd,EAAKvB,OAASmD,KAPI5B,EAAKvB,mBCpC3DqD,EAAoB,SAAC7B,GAAD,MAAY,CACzC7C,KAAMR,EACNS,KAAM4C,I,SCsHK8B,EAnHQ,SAAC,GAAa,IAAZpC,EAAW,EAAXA,MACfpD,EAAQyB,aAAY,qBAAER,MAAiBjB,SADb,EAEQqD,mBAASrD,EAAQ,EAAI,MAF7B,mBAEzBqF,EAFyB,KAEXC,EAFW,OAIcjC,mBAAS,IAJvB,mBAIzBoC,EAJyB,KAIRC,EAJQ,OAKcrC,mBAAS,IALvB,mBAKzBsC,EALyB,KAKRC,EALQ,OAMkBvC,mBAAS,IAN3B,mBAMzBwC,EANyB,KAMNC,EANM,OAOgBzC,mBAAS,IAPzB,mBAOzB0C,EAPyB,KAOPC,EAPO,OAQU3C,mBAAS,IARnB,mBAQzB4C,EARyB,KAQVC,EARU,KAU1BvE,EAAWC,cAEXG,EAASqB,EAAQf,EAAqBJ,EAE5CJ,qBAAU,WACc,UAAjBwD,GACC1D,EAAS4D,EAAkB,eAAD,OAAgBE,EAAhB,uBAA8CE,EAA9C,yBAA8EE,EAA9E,wBAA+GE,EAA/G,qBAA4IE,OAE3K,CAACtE,EAAU0D,EAAcI,EAAiBE,EAAiBE,EAAmBE,EAAkBE,IAenG,OACI,sBAAKtC,UAAW,QAAhB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,mGAGA,sBAAKH,UAAW,gBAAhB,UACI,cAACI,EAAA,EAAD,CAAaD,UAAU,WAAvB,SACI,cAACE,EAAA,EAAD,CACI5B,KAAMgB,EAAQ,oBAAsB,oBADxC,SAGKrB,EAAOkC,KAAI,SAACR,GACT,OAEI,qBAAKE,UAAW,aAAhB,SACI,cAACO,EAAA,EAAD,CACIR,MAAOD,EAAKvB,KACZiC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAOZ,EAAKrB,KACZK,GAAE,aAAQgB,EAAKvB,MACfoC,SAAU,kBAhCvB,SAACb,GACpB6B,EAAgB7B,EAAKvB,MACJ,UAAduB,EAAKvB,MAAkC,UAAduB,EAAKvB,MAAqBkB,EAE7B,UAAdK,EAAKvB,MAAkC,UAAduB,EAAKvB,KACrCP,EAAS4D,EAAkB,eAAD,OAAgBE,EAAhB,uBAA8CE,EAA9C,yBAA8EE,EAA9E,wBAA+GE,EAA/G,qBAA4IE,KAC/J7C,GAAuB,UAAdK,EAAKvB,KACrBP,EAAS4D,EAAkB,SAAD,OAAU9B,EAAKvB,QAEzCP,EAAS4D,EAAkB,KAN3B5D,EAAS4D,EAAkB,oBAAD,OAAqB9B,EAAKvB,QA6BRyC,CAAelB,IAC/Bc,QAASd,EAAKvB,OAASmD,KAPI5B,EAAKvB,aAcxD,qBAAKyB,UAAW,cAAhB,SACI,cAACwC,EAAA,EAAD,CACI/D,KAAM,aACNK,GAAI,iBACJ4B,MAAM,aACNR,QAAQ,WACRH,MAAO+B,EACPnB,SAAU,SAAC8B,GAAD,OAAOV,EAAmBU,EAAEC,cAAc3C,YAG5D,qBAAKC,UAAW,cAAhB,SACI,cAACwC,EAAA,EAAD,CACI/D,KAAM,aACNK,GAAI,gBACJ4B,MAAM,aACNR,QAAQ,WACRH,MAAOiC,EACPrB,SAAU,SAAC8B,GAAD,OAAOR,EAAmBQ,EAAEC,cAAc3C,YAG5D,qBAAKC,UAAW,cAAhB,SACI,cAACwC,EAAA,EAAD,CACI/D,KAAM,eACNK,GAAI,kBACJ4B,MAAM,eACNR,QAAQ,WACRH,MAAOmC,EACPvB,SAAU,SAAC8B,GAAD,OAAON,EAAqBM,EAAEC,cAAc3C,YAG9D,qBAAKC,UAAW,cAAhB,SACI,cAACwC,EAAA,EAAD,CACI/D,KAAM,cACNK,GAAI,iBACJ4B,MAAM,cACNR,QAAQ,WACRH,MAAOqC,EACPzB,SAAU,SAAC8B,GAAD,OAAOJ,EAAoBI,EAAEC,cAAc3C,YAG7D,qBAAKC,UAAW,cAAhB,SACI,cAACwC,EAAA,EAAD,CACI/D,KAAM,WACNK,GAAI,cACJ4B,MAAM,WACNR,QAAQ,WACRH,MAAOuC,EACP3B,SAAU,SAAC8B,GAAD,OAAOF,EAAiBE,EAAEC,cAAc3C,mB,iBCvG3D4C,GAPA,WACX,IAAM5E,EAAOD,aAAa,qBAAER,MAAiBlB,QAC7C,OACI,cAAC,IAAD,CAAQ2D,MAAOhC,KCoBR6E,GAxBF,WACT,IAAM/E,EAAQC,aAAY,qBAAER,SAE5B,OACI,gCACI,eAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,qEACgBtC,EAAMhC,YAEtB,eAACoE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,kFACmBtC,EAAM/B,YAEzB,eAACmE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,6CACYtC,EAAM9B,UAElB,eAACkE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,sHACyBtC,EAAM7B,kBAE/B,eAACiE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,oGACsBtC,EAAM5B,sBCFzB4G,GAjBG,SAAC,GAAa,IAAZpD,EAAW,EAAXA,MAChB,OACI,sBAAKO,UAAW,YAAhB,UACI,cAAC,EAAD,IACA,sBAAKA,UAAW,UAAhB,UACI,cAAC,EAAD,CAAUP,MAAOA,IACjB,cAAC,EAAD,CAAUA,MAAOA,IACjB,cAAC,EAAD,CAAQA,MAAOA,IACf,cAAC,EAAD,CAAgBA,MAAOA,IACvB,cAAC,EAAD,CAAgBA,MAAOA,OAE3B,cAAC,GAAD,IACA,cAAC,GAAD,Q,UCoBGqD,GAxBC,WAAO,IAAD,EACMpD,oBAAS,GADf,mBACXD,EADW,KACJsD,EADI,OAEQrD,oBAAS,GAFjB,mBAEXrD,EAFW,KAEJ2G,EAFI,KAGZhF,EAAWC,cACVgF,EAAc,SAACC,GAClBH,EAAOG,GACPlF,EZJ6B,CACjCd,KAAMJ,EACNK,KYEuBd,IACnB2G,GAAU3G,IAGd,OACI,sBAAK2D,UAAW,SAAhB,UACI,sBAAKA,UAAW,mBAAhB,UACI,cAACmD,GAAA,EAAD,CAAQjD,QAAS,YAAakD,QAAS,kBAAMH,GAAY,IAAzD,oBACA,cAACE,GAAA,EAAD,CAAQjD,QAAS,YAAakD,QAAS,kBAAMH,GAAY,IAAzD,oBAEFxD,EAEE,cAAC,GAAD,CAAWA,OAAO,IADlB,cAAC,GAAD,CAAWA,OAAO,QCnBlC4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU7F,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGN8F,SAASC,eAAe,SAM1BtI,M","file":"static/js/main.2c2c042c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const InitialState = {\n    platform: \"\",\n    deeplink: \"\",\n    screen: \"\",\n    internalSource: \"\",\n    externalSource: \"\",\n    web: false,\n    deeplinkType: \"marketplace\",\n    link: \"\",\n    reset: false,\n}","export const ADD_PLATFORM = \"ADD_PLATFORM\";\nexport const ADD_DEEPLINK = \"ADD_DEEPLINK\";\nexport const ADD_SCREEN = \"ADD_SCREEN\";\nexport const ADD_INTERNAL_SOURCE = \"ADD_INTERNAL_SOURCE\";\nexport const ADD_EXTERNAL_SOURCE = \"ADD_EXTERNAL_SOURCE\";\nexport const WEB_ACTIVE = \"WEB_ACTIVE\";\nexport const ADD_DEEPLINK_TYPE = \"ADD_DEEPLINK_TYPE\";\nexport const ADD_LINK = \"ADD_LINK\";\nexport const RESET_DATA = \"RESET_DATA\";","import {InitialState} from \"../initialState\";\nimport {\n    ADD_DEEPLINK, ADD_DEEPLINK_TYPE,\n    ADD_EXTERNAL_SOURCE,\n    ADD_INTERNAL_SOURCE,\n    ADD_PLATFORM,\n    ADD_SCREEN,\n    WEB_ACTIVE,\n    ADD_LINK,\n    RESET_DATA\n} from \"../consts\";\n\n\nconst LinksReducer = (state = InitialState, action) => {\n    switch(action.type){\n        case ADD_PLATFORM :\n            return {\n                ...state,\n                platform: action.data,\n            }\n        case ADD_DEEPLINK :\n            return {\n                ...state,\n                deeplink: action.data,\n                screen: \"\",\n            }\n        case ADD_SCREEN :\n            return {\n                ...state,\n                screen: action.data\n            }\n        case ADD_INTERNAL_SOURCE :\n            return {\n                ...state,\n                internalSource: action.data,\n                externalSource: \"\"\n            }\n        case ADD_EXTERNAL_SOURCE :\n            return {\n                ...state,\n                externalSource: action.data,\n                internalSource: \"\"\n            }\n        case WEB_ACTIVE :\n            return {\n                ...state,\n                web: action.data\n            }\n        case ADD_DEEPLINK_TYPE :\n            return {\n                ...state,\n                deeplinkType: action.data\n            }\n        case ADD_LINK :\n            return {\n                ...state,\n                link: action.data\n            }\n        case RESET_DATA:\n            return {\n                ...InitialState,\n                reset: action.data\n            }\n        default:\n            return state\n    }\n};\n\nexport default LinksReducer;","import { combineReducers } from \"redux\";\nimport LinksReducer from \"./linksReducer\";\n\n\nconst rootReducer = combineReducers({\n    Links: LinksReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers()\n);\n\nexport default store;","import {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {addLink} from \"../__data__/actions/linkAction\";\n\nconst Link = () => {\n    const links = useSelector(({Links}) => Links);\n    const path = `${links.platform}${links.deeplink}${links.screen}${links.internalSource}${links.externalSource}`\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(addLink(path))\n    }, [dispatch, path])\n    return (\n        <a href={path} target=\"_blank\" rel=\"noreferrer\">{path}</a>\n    )\n}\n\nexport default Link\n","import {ADD_LINK} from \"../consts\";\n\nexport const addLink = (value) => ({\n    type: ADD_LINK,\n    data: value\n})","export const externalSourcesNEW = [\n    {\n        code: \"empty\",\n        tab_id: 1,\n        name: \"Внутренний\"\n    },\n    {\n        code: \"push_InvestPFM\",\n        tab_id: 2,\n        name: \"Push\",\n    },\n    {\n        code: \"email_InvestPFM\",\n        tab_id: 3,\n        name: \"E-mail\",\n    },\n    {\n        code: \"sms_InvestPFM\",\n        tab_id: 4,\n        name: \"SMS\",\n    },\n    // {\n    //     code: \"screensaver\",\n    //     name: \"Screensaver\",\n    // },\n    // {\n    //     code: \"zen\",\n    //     name: \"Яндекс.Дзен\",\n    // },\n    // {\n    //     code: \"fb\",\n    //     name: \"Facebook\",\n    // },\n    // {\n    //     code: \"vc\",\n    //     name: \"Вконтакте\",\n    // },\n    // {\n    //     code: \"twitter\",\n    //     name: \"Twitter\",\n    // },\n    // {\n    //     code: \"inst\",\n    //     name: \"Instagram\",\n    // },\n    // {\n    //     code: \"sberbank\",\n    //     name: \"Сайт Сбер Банка\",\n    // },\n    // {\n    //     code: \"qr_vsp\",\n    //     name: \"QR-код в ВСП\",\n    // },\n    {\n        code: \"other\",\n        tab_id: 5,\n        name: \"Другой (utm)\"\n    },\n];\n\nexport const externalSourcesWeb = [\n    {\n        code: \"empty\",\n        tab_id: 6,\n        name: \"Внутренний\"\n    },\n    {\n        code: \"email\",\n        tab_id: 7,\n        name: \"Почтовая рассылка\",\n    },\n    {\n        code: \"facebook\",\n        tab_id: 8,\n        name: \"Фейсбук\",\n    },\n    {\n        code: \"vk\",\n        tab_id: 9,\n        name: \"Вконтакте\",\n    },\n    {\n        code: \"sberbank\",\n        tab_id: 10,\n        name: \"Сайт\",\n    },\n    {\n        code: \"other\",\n        tab_id: 11,\n        name: \"Другой (utm)\"\n    },\n]","export const internalSources = [\n    {\n        code: \"\",\n        tab_id: 1,\n        name: \"Внешний переход\"\n    },\n    {\n        code: \"Main_Plus_InvestPFM\",\n        tab_id: 2,\n        name: \"Плюс на главной\"\n    },\n    {\n        code: \"Main_Plus_InvestBroker\",\n        tab_id: 3,\n        name: \"На сценарий открытия брокерского счета\"\n    },\n    {\n        code: \"Marketplace_All_InvestPFM\",\n        tab_id: 4,\n        name: \"Каталог продуктов\"\n    },\n    {\n        code: \"GlobalSearch_InvestPFM\",\n        tab_id: 5,\n        name: \"Умный поиск\"\n    },\n    {\n        code: \"All_Assets_InvestPFM\",\n        tab_id: 6,\n        name: \"Всего средств\"\n    },\n    {\n        code: \"Main_Plus_Pensions\",\n        tab_id: 7,\n        name: \"Раздел Пенсии\"\n    },\n    {\n        code: \"Banner_Plus\",\n        tab_id: 8,\n        name: \"Баннер в пинах\"\n    },\n    {\n        code: \"Virtual_Assistant\",\n        tab_id: 9,\n        name: \"Виртуальный ассистент\"\n    },\n    {\n        code: \"Marketplace_Widget_InvestPFM\",\n        tab_id: 10,\n        name: \"Из карусели\"\n    },\n    {\n        code: \"BrokerAcc\",\n        tab_id: 11,\n        name: \"Из процесса открытия брокерского счет на витрине\"\n    },\n    {\n        code: \"FinPlan\",\n        tab_id: 12,\n        name: \"Из ФинПлана\"\n    },\n    {\n        code: \"Tips\",\n        tab_id: 13,\n        name: \"Из баннера Совета\"\n    },\n];\n\nexport const internalSourceWeb = [\n    {\n        code: \"\",\n        tab_id: 14,\n        name: \"Внешний переход\"\n    },\n    {\n        code: \"scaffold\",\n        tab_id: 15,\n        name: \"Продуктовое меню\"\n    },\n    {\n        code: \"catalog\",\n        tab_id: 16,\n        name: \"Каталог\"\n    },\n    {\n        code: \"smartsearch\",\n        tab_id: 17,\n        name: \"Умный поиск\"\n    },\n    {\n        code: \"investprofile\",\n        tab_id: 18,\n        name: \"Инвестпрофилирование\"\n    },\n    {\n        code: \"pfmfinances\",\n        tab_id: 19,\n        name: \"Всего средств\"\n    },\n]","export const platformNEW = [\n    {\n        id: \"android_prom\",\n        tab_id: 1,\n        name: \"Android ПРОМ\",\n        base: \"android-app://ru.sberbankmobile/android-app/ru.sberbankmobile/\",\n        appendCode: true,\n        ext: \"mobile\"\n    },\n    {\n        id: \"android_test\",\n        tab_id: 2,\n        name: \"Android ТЕСТ\",\n        base: \"android-app://ru.sberbankmobile_alpha/android-app/ru.sberbankmobile_alpha/\",\n        appendCode: true,\n        ext: \"mobile\"\n    },\n    {\n        id: \"ios\",\n        tab_id: 3,\n        name: \"iOS\",\n        base: \"sberbankonline://\",\n        appendCode: true,\n        ext: \"mobile\"\n    },\n    // smart: {\n    //   name: \"Смартлинк общий\",\n    //   base: \"https://sberbank.ru/sms/\",\n    //   appendCode: false,\n    //   ext: \"smart\"\n    // },\n    // {\n    //     id: \"smart_sms\",\n    //     name: \"Смартлинк для SMS\",\n    //     base: \"https://sberbank.ru/sms/\",\n    //     appendCode: false,\n    //     ext: \"no\"\n    // },\n    // {\n    //     id: \"web\",\n    //     tab_id: 4,\n    //     name: \"Web\",\n    //     base: \"https://online.sberbank.ru/CSAFront/service.do\",\n    //     appendCode: true,\n    //     ext: \"smart\"\n    // }\n];\n\nexport const platformWeb = [\n    {\n        id: \"web\",\n        tab_id: 4,\n        name: \"Web\",\n        base: \"https://online.sberbank.ru/CSAFront/service.do\",\n        appendCode: true,\n        ext: \"smart\"\n    }\n]\n","export const deeplinksNEW = [\n    {\n        id: \"marketplace\",\n        tab_id: 1,\n        name: \"Витрина\",\n        path: \"pfm/marketplace\",\n    },\n    {\n        id: \"pif\",\n        tab_id: 2,\n        name: \"Продукты ПИФ\",\n        path: \"welfare/invest-pif/product\",\n    },\n    {\n        id: \"trust\",\n        tab_id: 3,\n        name: \"Продукты ДУ\",\n        path: \"investments/tm/product/card\",\n    },\n]\n\nexport const deeplinksWeb = [\n    {\n        id: \"webmarketplace\",\n        tab_id: 4,\n        name: \"Витрина\",\n        path: \"\",\n    }\n]","export const screen = [\n    {\n        code: \"marketplace\",\n        name: \"Витрина\",\n        param: \"marketPlaceId\",\n        options: [\n            {\n                code: \"investmentsCatalog\",\n                tab_id: 1,\n                name: \"Основная витрина инвестиций\",\n            },\n            {\n                code: \"PIFCatalog\",\n                tab_id: 2,\n                name: \"Витрина категории ПИФ\"\n            },\n            {\n                code: \"IIS_products\",\n                tab_id: 3,\n                name: \"Витрина ИИС с продуктами\"},\n            {\n                code: \"trustCatalog\",\n                tab_id: 4,\n                name: \"Доверительное управление\"},\n            {\n                code: \"investPlansAllMB\",\n                tab_id: 5,\n                name: \"Инвестиционные планы\"\n            },\n            {\n                code: \"forYouCatalog\",\n                tab_id: 6,\n                name: \"По уровню риска\"\n            },\n            {\n                code: \"maxProfitSelection\",\n                tab_id: 7,\n                name: \"Максимум дохода\"\n            },\n            {\n                code: \"minAmountSelection\",\n                tab_id: 8,\n                name: \"Минимальная сумма\"\n            },\n            {\n                code: \"regularPayoutsSelection\",\n                tab_id: 9,\n                name: \"Регулярные выплаты\"\n            },\n            {\n                code: \"currencyInvestSelection\",\n                tab_id: 10,\n                name: \"Инвестиции в валютные активы\"\n            },\n        ]\n    },\n    {\n        code: \"pif\",\n        name: \"Продукты ПИФ\",\n        param: \"productCode\",\n        options: [\n            {\n                code: \"fund_equity_dn\",\n                tab_id: 11,\n                name: \"Фонд акций Добрыня Никитич\"\n            },\n            {\n                code: \"fund_bond_im\",\n                tab_id: 12,\n                name: \"Фонд облигаций Илья Муромец\"\n            },\n            {\n                code: \"fund_balanced\",\n                tab_id: 13,\n                name: \"Фонд Сбалансированный\"\n            },\n            {\n                code: \"fund_prosp_bonds\",\n                tab_id: 14,\n                name: \"Фонд перспективных облигаций\"\n            },\n            {\n                code: \"fund_eurobonds\",\n                tab_id: 15,\n                name: \"Фонд Еврооблигации\"\n            },\n            {\n                code: \"fund_debt_market\",\n                tab_id: 16,\n                name: \"Фонд Глобальный долговой рынок\"\n            },\n            {\n                code: \"fund_money\",\n                tab_id: 17,\n                name: \"Фонд Денежный\"\n            }\n        ]\n    },\n    {\n        code: \"trust\",\n        name: \"Продукты ДУ\",\n        param: \"productCode\",\n        options: [\n            {\n                code: \"trust_conservative\",\n                tab_id: 18,\n                name: \"Стратегия \\\"Консервативный портфель\\\"\"\n            },\n            {\n                code: \"trust_careful\",\n                tab_id: 19,\n                name: \"Стратегия \\\"Осторожный портфель\\\"\"\n            },\n            {\n                code: \"trust_moderate\",\n                tab_id: 20,\n                name: \"Стратегия \\\"Умеренный портфель\\\"\"\n            },\n            {\n                code: \"trust_modagressive\",\n                tab_id: 21,\n                name: \"Стратегия \\\"Умеренно-агрессивный портфель\\\"\"\n            },\n        ]\n    }\n];\n\nexport const screenWeb = [\n    {\n        code: \"webmarketplace\",\n        name: \"Витрина\",\n        param: \"srvUrl\",\n        options: [\n            {\n                code: \"investments\",\n                tab_id: 22,\n                name: \"Основная витрина инвестиций\",\n            },\n        ]\n    },\n]","import {platformNEW, platformWeb} from \"../__data__\";\nimport {useDispatch} from \"react-redux\";\nimport {addPlatform, webPlatform} from \"../__data__/actions/platformAction\";\nimport {useState} from \"react\";\nimport {FormControl, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\n\nconst Platform = ({isWeb}) => {\n    const [activePlatform, setActivePlatform] = useState(0)\n    const dispatch = useDispatch();\n\n    const target = isWeb ? platformWeb : platformNEW\n\n    const handlePlatform = (item) => {\n        setActivePlatform(item.tab_id)\n        dispatch(addPlatform(item.base))\n        if(item.id === \"web\") {\n            dispatch(webPlatform())\n        }\n    }\n\n    return (\n        <div className={\"block\"}>\n            <Typography variant=\"h6\" component=\"h2\">\n                Платформа\n            </Typography>\n            <div className={\"block-wrapper\"}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        name={isWeb ? \"platformWeb\" : \"platformNEW\"}\n                    >\n                        {target.map((item) => {\n                            return (\n\n                                <div className={\"block-item\"} key={item.id}>\n                                    <FormControlLabel\n                                        value={item.id}\n                                        control={<Radio />}\n                                        label={item.name}\n                                        id={`new${item.id}`}\n                                        onChange={() => handlePlatform(item)}\n                                        checked={item.tab_id === activePlatform}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        </div>\n    )\n}\n\nexport default Platform","import {ADD_PLATFORM, RESET_DATA, WEB_ACTIVE} from \"../consts\";\n\nexport const addPlatform = (value) => ({\n    type: ADD_PLATFORM,\n    data: value\n})\n\nexport const webPlatform = () => ({\n    type: WEB_ACTIVE,\n    data: true\n})\n\nexport const resetData = (value) => ({\n    type: RESET_DATA,\n    data: value\n})","import {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {deeplinksNEW, deeplinksWeb} from \"../__data__\";\nimport {addDeeplink, addDeeplinkType} from \"../__data__/actions/deeplinkAction\";\nimport {FormControl, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\n\nconst Deeplink = ({isWeb}) => {\n    const reset = useSelector(({Links}) => Links.reset)\n    const [activeDeeplink, setActiveDeeplink] = useState(reset ? 0 : null)\n    const dispatch = useDispatch();\n\n    const target = isWeb ? deeplinksWeb: deeplinksNEW\n\n    const handleDeeplink = (item) => {\n        setActiveDeeplink(item.id)\n        dispatch(addDeeplink(item.path))\n        dispatch(addDeeplinkType(item.id))\n    }\n\n    return (\n            <div className={\"block\"}>\n                <Typography variant=\"h6\" component=\"h2\">\n                    Куда перейти\n                </Typography>\n\n                <div className={\"block-wrapper\"}>\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup\n                            name={isWeb ? \"targetWeb\" : \"targetNEW\"}\n                        >\n                            {target.map((item) => {\n                                return (\n\n                                    <div className={\"block-item\"} key={item.id}>\n                                        <FormControlLabel\n                                            value={item.path}\n                                            control={<Radio />}\n                                            label={item.name}\n                                            id={`new${item.id}`}\n                                            onChange={() => handleDeeplink(item)}\n                                            checked={item.id === activeDeeplink}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n            </div>\n\n    )\n\n}\n\nexport default Deeplink;","import {ADD_DEEPLINK, ADD_DEEPLINK_TYPE} from \"../consts\";\n\nexport const addDeeplink = (value) => ({\n    type: ADD_DEEPLINK,\n    data: value\n})\n\nexport const addDeeplinkType = (value) => ({\n    type: ADD_DEEPLINK_TYPE,\n    data: value\n})","import {ADD_SCREEN} from \"../consts\";\n\nexport const addScreen = (value) => ({\n    type: ADD_SCREEN,\n    data: value\n})","import {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {screen, screenWeb} from \"../__data__\";\nimport {addScreen} from \"../__data__/actions/screenAction\";\nimport {FormControl, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\n\nconst Screen = ({isWeb}) => {\n    const reset = useSelector(({Links}) => Links.reset)\n    const [activeScreen, setActiveScreen] = useState(reset ? 0 : null)\n    const deeplinkType = useSelector(({Links}) => Links.deeplinkType)\n\n    const dispatch = useDispatch();\n    const target = isWeb ? screenWeb : screen\n    const screenItems = isWeb ?\n        target.find(item => item.code === \"webmarketplace\") :\n        target.find(item => item.code === deeplinkType)\n\n    const handleDeeplink = (item) => {\n        setActiveScreen(item.code)\n        if(isWeb) {\n            dispatch(addScreen(`?${screenItems.param}=%2F${item.code}`))\n        } else {\n            dispatch(addScreen(`?${screenItems.param}=${item.code}`))\n        }\n    }\n\n    return (\n        <div className={\"block\"}>\n            <Typography variant=\"h6\" component=\"h2\">\n                Экран\n            </Typography>\n            <div className={\"block-wrapper\"}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        name={isWeb ? \"screenWeb\" : \"screenNEW\"}\n                    >\n                        {screenItems.options.map((item) => {\n                            return (\n\n                                <div className={\"block-item\"} key={item.code}>\n                                    <FormControlLabel\n                                        value={item.code}\n                                        control={<Radio />}\n                                        label={item.name}\n                                        id={`new${item.code}`}\n                                        onChange={() => handleDeeplink(item)}\n                                        checked={item.code === activeScreen}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        </div>\n    )\n}\n\nexport default Screen","import {ADD_INTERNAL_SOURCE} from \"../consts\";\n\nexport const addInternalSource = (value) => ({\n    type: ADD_INTERNAL_SOURCE,\n    data: value\n})","import {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {internalSources, internalSourceWeb} from \"../__data__\";\nimport {addInternalSource} from \"../__data__/actions/internalSourceAction\";\nimport {FormControl, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\n\nconst InternalSource = ({isWeb}) => {\n    const reset = useSelector(({Links}) => Links.reset)\n    const [activeSource, setActiveSource] = useState(reset? 0 : null)\n    const dispatch = useDispatch();\n\n    const target = isWeb ? internalSourceWeb : internalSources\n\n    const handleDeeplink = (item) => {\n        setActiveSource(item.code)\n        if(item.code !== \"\" && !isWeb){\n            dispatch(addInternalSource(`&internal_source=${item.code}`))\n        } else if (isWeb){\n            dispatch(addInternalSource(`?from=${item.code}`))\n        } else {\n            dispatch(addInternalSource(``))\n        }\n\n    }\n\n    return (\n        <div className={\"block\"}>\n            <Typography variant=\"h6\" component=\"h2\">\n                Внутренний переход\n            </Typography>\n            <div className={\"block-wrapper\"}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        name={isWeb ? \"internalSourceWeb\" : \"internalSourceNEW\"}\n                    >\n                        {target.map((item) => {\n                            return (\n\n                                <div className={\"block-item\"} key={item.code}>\n                                    <FormControlLabel\n                                        value={item.code}\n                                        control={<Radio />}\n                                        label={item.name}\n                                        id={`new${item.code}`}\n                                        onChange={() => handleDeeplink(item)}\n                                        checked={item.code === activeSource}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        </div>\n    )\n}\n\nexport default InternalSource","import {ADD_EXTERNAL_SOURCE} from \"../consts\";\n\nexport const addExternalSource = (value) => ({\n    type: ADD_EXTERNAL_SOURCE,\n    data: value\n})","import {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {externalSourcesNEW, externalSourcesWeb} from \"../__data__\";\n\nimport {addExternalSource} from \"../__data__/actions/externalSourceAction\";\nimport {FormControl, FormControlLabel, Radio, RadioGroup, TextField, Typography} from \"@mui/material\";\n\nconst ExternalSource = ({isWeb}) => {\n    const reset = useSelector(({Links}) => Links.reset)\n    const [activeSource, setActiveSource] = useState(reset ? 0 : null)\n\n    const [activeUtmSource, setActiveUtmSource] = useState(\"\")\n    const [activeUtmMedium, setActiveUtmMedium] = useState(\"\")\n    const [activeUtmCompaign, setActiveUtmCompaign] = useState(\"\")\n    const [activeUtmContent, setActiveUtmContent] = useState(\"\")\n    const [activeUtmTerm, setActiveUtmTerm] = useState(\"\")\n\n    const dispatch = useDispatch();\n\n    const target = isWeb ? externalSourcesWeb : externalSourcesNEW\n\n    useEffect(() => {\n        if(activeSource === \"other\") {\n            dispatch(addExternalSource(`&utm_source=${activeUtmSource}&utm_medium=${activeUtmMedium}&utm_compaign=${activeUtmCompaign}&utm_content=${activeUtmContent}&utm_term=${activeUtmTerm}`))\n        }\n    }, [dispatch, activeSource, activeUtmSource, activeUtmMedium, activeUtmCompaign, activeUtmContent, activeUtmTerm])\n\n    const handleDeeplink = (item) => {\n        setActiveSource(item.code)\n        if(item.code !== \"empty\" && item.code !== \"other\" && !isWeb){\n            dispatch(addExternalSource(`&external_source=${item.code}`))\n        } else if (item.code === \"other\" && item.code !== \"empty\"){\n            dispatch(addExternalSource(`&utm_source=${activeUtmSource}&utm_medium=${activeUtmMedium}&utm_compaign=${activeUtmCompaign}&utm_content=${activeUtmContent}&utm_term=${activeUtmTerm}`))\n        } else if (isWeb && item.code !== \"empty\") {\n            dispatch(addExternalSource(`?from=${item.code}`))\n        } else {\n            dispatch(addExternalSource(``))\n        }\n    }\n\n    return (\n        <div className={\"block\"}>\n            <Typography variant=\"h6\" component=\"h2\">\n                Внешний переход\n            </Typography>\n            <div className={\"block-wrapper\"}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        name={isWeb ? \"externalSourceWeb\" : \"externalSourceNEW\"}\n                    >\n                        {target.map((item) => {\n                            return (\n\n                                <div className={\"block-item\"} key={item.code}>\n                                    <FormControlLabel\n                                        value={item.code}\n                                        control={<Radio />}\n                                        label={item.name}\n                                        id={`new${item.code}`}\n                                        onChange={() => handleDeeplink(item)}\n                                        checked={item.code === activeSource}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </RadioGroup>\n                </FormControl>\n                <div className={\"block-input\"}>\n                    <TextField\n                        name={\"utm_source\"}\n                        id={\"newutem_source\"}\n                        label=\"utm_source\"\n                        variant=\"outlined\"\n                        value={activeUtmSource}\n                        onChange={(e) => setActiveUtmSource(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <TextField\n                        name={\"utm_medium\"}\n                        id={\"newutm_medium\"}\n                        label=\"utm_medium\"\n                        variant=\"outlined\"\n                        value={activeUtmMedium}\n                        onChange={(e) => setActiveUtmMedium(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <TextField\n                        name={\"utm_compaign\"}\n                        id={\"newutm_compaign\"}\n                        label=\"utm_compaign\"\n                        variant=\"outlined\"\n                        value={activeUtmCompaign}\n                        onChange={(e) => setActiveUtmCompaign(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <TextField\n                        name={\"utm_content\"}\n                        id={\"newutm_content\"}\n                        label=\"utm_content\"\n                        variant=\"outlined\"\n                        value={activeUtmContent}\n                        onChange={(e) => setActiveUtmContent(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <TextField\n                        name={\"utm_term\"}\n                        id={\"newutm_term\"}\n                        label=\"utm_term\"\n                        variant=\"outlined\"\n                        value={activeUtmTerm}\n                        onChange={(e) => setActiveUtmTerm(e.currentTarget.value)}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ExternalSource","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport QRCode from \"qrcode.react\"\n\nconst QrCode = () => {\n    const path = useSelector((({Links}) => Links.link))\n    return(\n        <QRCode value={path}/>\n    )\n}\n\nexport default QrCode","import {useSelector} from \"react-redux\";\nimport {Typography} from \"@mui/material\";\n\nconst Info = () => {\n    const links = useSelector(({Links}) => Links)\n\n    return(\n        <div>\n            <Typography variant=\"h6\" component=\"h2\">\n                Платформа: {links.platform}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n                Куда перейти: {links.deeplink}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n                Экран: {links.screen}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n                Внутренний переход: {links.internalSource}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n                Внешний переход: {links.externalSource}\n            </Typography>\n        </div>\n    )\n}\n\nexport default Info;","import {Deeplink, ExternalSource, Info, InternalSource, Link, Platform, QrCode, Screen} from \"./index\";\n\nconst Container = ({isWeb}) => {\n    return(\n        <div className={\"container\"}>\n            <Link/>\n            <div className={\"wrapper\"}>\n                <Platform isWeb={isWeb}/>\n                <Deeplink isWeb={isWeb}/>\n                <Screen isWeb={isWeb}/>\n                <InternalSource isWeb={isWeb}/>\n                <ExternalSource isWeb={isWeb}/>\n            </div>\n            <QrCode/>\n            <Info/>\n        </div>\n    )\n}\n\nexport default Container;","import './App.css';\nimport {\n    Container,\n} from \"./components\";\nimport {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {resetData} from \"./__data__/actions/platformAction\";\nimport {Button} from \"@mui/material\";\n\n\nconst AppFunc = () => {\n    const [isWeb, setWeb] = useState(false)\n    const [reset, setReset] = useState(true)\n    const dispatch = useDispatch()\n     const handleClick = (bool) => {\n        setWeb(bool);\n        dispatch(resetData(reset))\n        setReset(!reset)\n    }\n\n    return (\n        <div className={\"window\"}>\n            <div className={\"button-container\"}>\n                <Button variant={\"contained\"} onClick={() => handleClick(false)}>Mobile</Button>\n                <Button variant={\"contained\"} onClick={() => handleClick(true)}>Web</Button>\n            </div>\n            {!isWeb ?\n                <Container isWeb={false}/> :\n                <Container isWeb={true}/>\n            }\n        </div>\n    )\n}\n\nexport default AppFunc;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./__data__/store\";\nimport AppFunc from \"./AppFunc\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <AppFunc/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}