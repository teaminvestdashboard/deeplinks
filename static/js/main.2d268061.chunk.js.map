{"version":3,"sources":["reportWebVitals.js","__data__/initialState.js","__data__/consts.js","__data__/reducers/linksReducer.js","__data__/reducers/index.js","__data__/store.js","components/link.jsx","__data__/actions/linkAction.js","__data__/externalSourceNEW.js","__data__/internalSources.js","__data__/platformNEW.js","__data__/deeplinksNEW.js","__data__/screen.js","components/platform.jsx","__data__/actions/platformAction.js","components/deeplink.jsx","__data__/actions/deeplinkAction.js","__data__/actions/screenAction.js","components/screen.jsx","__data__/actions/internalSourceAction.js","components/internalSource.jsx","__data__/actions/externalSourceAction.js","components/externalSource.jsx","components/qr.jsx","components/reload.jsx","components/info.jsx","AppFunc.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialState","platform","deeplink","screen","internalSource","externalSource","web","deeplinkType","link","ADD_PLATFORM","ADD_DEEPLINK","ADD_SCREEN","ADD_INTERNAL_SOURCE","ADD_EXTERNAL_SOURCE","WEB_ACTIVE","ADD_DEEPLINK_TYPE","ADD_LINK","LinksReducer","state","action","type","data","rootReducer","combineReducers","Links","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","Link","links","useSelector","path","dispatch","useDispatch","useEffect","href","target","rel","externalSourcesNEW","code","tab_id","name","externalSourcesWeb","internalSources","internalSourceWeb","platformNEW","id","base","appendCode","ext","deeplinksNEW","deeplinksWeb","param","options","screenWeb","Platform","useState","activePlatform","setActivePlatform","handlePlatform","item","value","className","map","onChange","checked","htmlFor","Deeplink","isChange","activeDeeplink","setActiveDeeplink","isWeb","handleDeeplink","addDeeplinkType","addScreen","Screen","activeScreen","setActiveScreen","screenItems","find","addInternalSource","InternalSource","activeSource","setActiveSource","addExternalSource","ExternalSource","activeUtmSource","setActiveUtmSource","activeUtmMedium","setActiveUtmMedium","activeUtmCompaign","setActiveUtmCompaign","activeUtmContent","setActiveUtmContent","activeUtmTerm","setActiveUtmTerm","e","currentTarget","QrCode","Reload","onClick","location","reload","Info","AppFunc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d268061.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const InitialState = {\n    platform: \"\",\n    deeplink: \"\",\n    screen: \"\",\n    internalSource: \"\",\n    externalSource: \"\",\n    web: false,\n    deeplinkType: \"marketplace\",\n    link: \"\"\n}","export const ADD_PLATFORM = \"ADD_PLATFORM\";\nexport const ADD_DEEPLINK = \"ADD_DEEPLINK\";\nexport const ADD_SCREEN = \"ADD_SCREEN\";\nexport const ADD_INTERNAL_SOURCE = \"ADD_INTERNAL_SOURCE\";\nexport const ADD_EXTERNAL_SOURCE = \"ADD_EXTERNAL_SOURCE\";\nexport const WEB_ACTIVE = \"WEB_ACTIVE\";\nexport const ADD_DEEPLINK_TYPE = \"ADD_DEEPLINK_TYPE\";\nexport const ADD_LINK = \"ADD_LINK\";","import {InitialState} from \"../initialState\";\nimport {\n    ADD_DEEPLINK, ADD_DEEPLINK_TYPE,\n    ADD_EXTERNAL_SOURCE,\n    ADD_INTERNAL_SOURCE,\n    ADD_PLATFORM,\n    ADD_SCREEN,\n    WEB_ACTIVE,\n    ADD_LINK\n} from \"../consts\";\n\n\nconst LinksReducer = (state = InitialState, action) => {\n    switch(action.type){\n        case ADD_PLATFORM :\n            return {\n                ...state,\n                ...InitialState,\n                platform: action.data,\n            }\n        case ADD_DEEPLINK :\n            return {\n                ...state,\n                deeplink: action.data,\n                screen: \"\",\n                internalSource: \"\",\n                externalSource: \"\",\n            }\n        case ADD_SCREEN :\n            return {\n                ...state,\n                screen: action.data\n            }\n        case ADD_INTERNAL_SOURCE :\n            return {\n                ...state,\n                internalSource: action.data,\n                externalSource: \"\"\n            }\n        case ADD_EXTERNAL_SOURCE :\n            return {\n                ...state,\n                externalSource: action.data,\n                internalSource: \"\"\n            }\n        case WEB_ACTIVE :\n            return {\n                ...state,\n                web: action.data\n            }\n        case ADD_DEEPLINK_TYPE :\n            return {\n                ...state,\n                deeplinkType: action.data\n            }\n        case ADD_LINK :\n            return {\n                ...state,\n                link: action.data\n            }\n        default:\n            return state\n    }\n};\n\nexport default LinksReducer;","import { combineReducers } from \"redux\";\nimport LinksReducer from \"./linksReducer\";\n\n\nconst rootReducer = combineReducers({\n    Links: LinksReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers()\n);\n\nexport default store;","import {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {addLink} from \"../__data__/actions/linkAction\";\n\nconst Link = () => {\n    const links = useSelector(({Links}) => Links);\n    const path = `${links.platform}${links.deeplink}${links.screen}${links.internalSource}${links.externalSource}`\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(addLink(path))\n    }, [dispatch, path])\n    return (\n        <a href={path} target=\"_blank\" rel=\"noreferrer\">{path}</a>\n    )\n}\n\nexport default Link\n","import {ADD_LINK} from \"../consts\";\n\nexport const addLink = (value) => ({\n    type: ADD_LINK,\n    data: value\n})","export const externalSourcesNEW = [\n    {\n        code: \"empty\",\n        tab_id: 1,\n        name: \"Внутренний\"\n    },\n    {\n        code: \"push_InvestPFM\",\n        tab_id: 2,\n        name: \"Push\",\n    },\n    {\n        code: \"email_InvestPFM\",\n        tab_id: 3,\n        name: \"E-mail\",\n    },\n    {\n        code: \"sms_InvestPFM\",\n        tab_id: 4,\n        name: \"SMS\",\n    },\n    // {\n    //     code: \"screensaver\",\n    //     name: \"Screensaver\",\n    // },\n    // {\n    //     code: \"zen\",\n    //     name: \"Яндекс.Дзен\",\n    // },\n    // {\n    //     code: \"fb\",\n    //     name: \"Facebook\",\n    // },\n    // {\n    //     code: \"vc\",\n    //     name: \"Вконтакте\",\n    // },\n    // {\n    //     code: \"twitter\",\n    //     name: \"Twitter\",\n    // },\n    // {\n    //     code: \"inst\",\n    //     name: \"Instagram\",\n    // },\n    // {\n    //     code: \"sberbank\",\n    //     name: \"Сайт Сбер Банка\",\n    // },\n    // {\n    //     code: \"qr_vsp\",\n    //     name: \"QR-код в ВСП\",\n    // },\n    {\n        code: \"other\",\n        tab_id: 5,\n        name: \"Другой (utm)\"\n    },\n];\n\nexport const externalSourcesWeb = [\n    {\n        code: \"empty\",\n        tab_id: 6,\n        name: \"Внутренний\"\n    },\n    {\n        code: \"email\",\n        tab_id: 7,\n        name: \"Почтовая рассылка\",\n    },\n    {\n        code: \"facebook\",\n        tab_id: 8,\n        name: \"Фейсбук\",\n    },\n    {\n        code: \"vk\",\n        tab_id: 9,\n        name: \"Вконтакте\",\n    },\n    {\n        code: \"sberbank\",\n        tab_id: 10,\n        name: \"Сайт\",\n    },\n    {\n        code: \"other\",\n        tab_id: 11,\n        name: \"Другой (utm)\"\n    },\n]","export const internalSources = [\n    {\n        code: \"\",\n        tab_id: 1,\n        name: \"Внешний переход\"\n    },\n    {\n        code: \"Main_Plus_InvestPFM\",\n        tab_id: 2,\n        name: \"Плюс на главной\"\n    },\n    {\n        code: \"Main_Plus_InvestBroker\",\n        tab_id: 3,\n        name: \"На сценарий открытия брокерского счета\"\n    },\n    {\n        code: \"Marketplace_All_InvestPFM\",\n        tab_id: 4,\n        name: \"Каталог продуктов\"\n    },\n    {\n        code: \"GlobalSearch_InvestPFM\",\n        tab_id: 5,\n        name: \"Умный поиск\"\n    },\n    {\n        code: \"All_Assets_InvestPFM\",\n        tab_id: 6,\n        name: \"Всего средств\"\n    },\n    {\n        code: \"Main_Plus_Pensions\",\n        tab_id: 7,\n        name: \"Раздел Пенсии\"\n    },\n    {\n        code: \"Banner_Plus\",\n        tab_id: 8,\n        name: \"Баннер в пинах\"\n    },\n    {\n        code: \"Virtual_Assistant\",\n        tab_id: 9,\n        name: \"Виртуальный ассистент\"\n    },\n    {\n        code: \"Marketplace_Widget_InvestPFM\",\n        tab_id: 10,\n        name: \"Из карусели\"\n    },\n    {\n        code: \"BrokerAcc\",\n        tab_id: 11,\n        name: \"Из процесса открытия брокерского счет на витрине\"\n    },\n    {\n        code: \"FinPlan\",\n        tab_id: 12,\n        name: \"Из ФинПлана\"\n    },\n    {\n        code: \"Tips\",\n        tab_id: 13,\n        name: \"Из баннера Совета\"\n    },\n];\n\nexport const internalSourceWeb = [\n    {\n        code: \"\",\n        tab_id: 14,\n        name: \"Внешний переход\"\n    },\n    {\n        code: \"scaffold\",\n        tab_id: 15,\n        name: \"Продуктовое меню\"\n    },\n    {\n        code: \"catalog\",\n        tab_id: 16,\n        name: \"Каталог\"\n    },\n    {\n        code: \"smartsearch\",\n        tab_id: 17,\n        name: \"Умный поиск\"\n    },\n    {\n        code: \"investprofile\",\n        tab_id: 18,\n        name: \"Инвестпрофилирование\"\n    },\n    {\n        code: \"pfmfinances\",\n        tab_id: 19,\n        name: \"Всего средств\"\n    },\n]","export const platformNEW = [\n    {\n        id: \"android_prom\",\n        tab_id: 1,\n        name: \"Android ПРОМ\",\n        base: \"android-app://ru.sberbankmobile/android-app/ru.sberbankmobile/\",\n        appendCode: true,\n        ext: \"mobile\"\n    },\n    {\n        id: \"android_test\",\n        tab_id: 2,\n        name: \"Android ТЕСТ\",\n        base: \"android-app://ru.sberbankmobile_alpha/android-app/ru.sberbankmobile_alpha/\",\n        appendCode: true,\n        ext: \"mobile\"\n    },\n    {\n        id: \"ios\",\n        tab_id: 3,\n        name: \"iOS\",\n        base: \"sberbankonline://\",\n        appendCode: true,\n        ext: \"mobile\"\n    },\n    // smart: {\n    //   name: \"Смартлинк общий\",\n    //   base: \"https://sberbank.ru/sms/\",\n    //   appendCode: false,\n    //   ext: \"smart\"\n    // },\n    // {\n    //     id: \"smart_sms\",\n    //     name: \"Смартлинк для SMS\",\n    //     base: \"https://sberbank.ru/sms/\",\n    //     appendCode: false,\n    //     ext: \"no\"\n    // },\n    {\n        id: \"web\",\n        tab_id: 4,\n        name: \"Web\",\n        base: \"https://online.sberbank.ru/CSAFront/service.do\",\n        appendCode: true,\n        ext: \"smart\"\n    }\n];\n","export const deeplinksNEW = [\n    {\n        id: \"marketplace\",\n        tab_id: 1,\n        name: \"Витрина\",\n        path: \"pfm/marketplace\",\n    },\n    {\n        id: \"pif\",\n        tab_id: 2,\n        name: \"Продукты ПИФ\",\n        path: \"welfare/invest-pif/product\",\n    },\n    {\n        id: \"trust\",\n        tab_id: 3,\n        name: \"Продукты ДУ\",\n        path: \"investments/tm/product/card\",\n    },\n]\n\nexport const deeplinksWeb = [\n    {\n        id: \"marketplace\",\n        tab_id: 4,\n        name: \"Витрина\",\n        path: \"\",\n    }\n]","export const screen = [\n    {\n        code: \"marketplace\",\n        name: \"Витрина\",\n        param: \"marketPlaceId\",\n        options: [\n            {\n                code: \"investmentsCatalog\",\n                tab_id: 1,\n                name: \"Основная витрина инвестиций\",\n            },\n            {\n                code: \"PIFCatalog\",\n                tab_id: 2,\n                name: \"Витрина категории ПИФ\"\n            },\n            {\n                code: \"IIS_products\",\n                tab_id: 3,\n                name: \"Витрина ИИС с продуктами\"},\n            {\n                code: \"trustCatalog\",\n                tab_id: 4,\n                name: \"Доверительное управление\"},\n            {\n                code: \"investPlansAllMB\",\n                tab_id: 5,\n                name: \"Инвестиционные планы\"\n            },\n            {\n                code: \"forYouCatalog\",\n                tab_id: 6,\n                name: \"По уровню риска\"\n            },\n            {\n                code: \"maxProfitSelection\",\n                tab_id: 7,\n                name: \"Максимум дохода\"\n            },\n            {\n                code: \"minAmountSelection\",\n                tab_id: 8,\n                name: \"Минимальная сумма\"\n            },\n            {\n                code: \"regularPayoutsSelection\",\n                tab_id: 9,\n                name: \"Регулярные выплаты\"\n            },\n            {\n                code: \"currencyInvestSelection\",\n                tab_id: 10,\n                name: \"Инвестиции в валютные активы\"\n            },\n        ]\n    },\n    {\n        code: \"pif\",\n        name: \"Продукты ПИФ\",\n        param: \"productCode\",\n        options: [\n            {\n                code: \"fund_equity_dn\",\n                tab_id: 11,\n                name: \"Фонд акций Добрыня Никитич\"\n            },\n            {\n                code: \"fund_bond_im\",\n                tab_id: 12,\n                name: \"Фонд облигаций Илья Муромец\"\n            },\n            {\n                code: \"fund_balanced\",\n                tab_id: 13,\n                name: \"Фонд Сбалансированный\"\n            },\n            {\n                code: \"fund_prosp_bonds\",\n                tab_id: 14,\n                name: \"Фонд перспективных облигаций\"\n            },\n            {\n                code: \"fund_eurobonds\",\n                tab_id: 15,\n                name: \"Фонд Еврооблигации\"\n            },\n            {\n                code: \"fund_debt_market\",\n                tab_id: 16,\n                name: \"Фонд Глобальный долговой рынок\"\n            },\n            {\n                code: \"fund_money\",\n                tab_id: 17,\n                name: \"Фонд Денежный\"\n            }\n        ]\n    },\n    {\n        code: \"trust\",\n        name: \"Продукты ДУ\",\n        param: \"productCode\",\n        options: [\n            {\n                code: \"trust_conservative\",\n                tab_id: 18,\n                name: \"Стратегия \\\"Консервативный портфель\\\"\"\n            },\n            {\n                code: \"trust_careful\",\n                tab_id: 19,\n                name: \"Стратегия \\\"Осторожный портфель\\\"\"\n            },\n            {\n                code: \"trust_moderate\",\n                tab_id: 20,\n                name: \"Стратегия \\\"Умеренный портфель\\\"\"\n            },\n            {\n                code: \"trust_modagressive\",\n                tab_id: 21,\n                name: \"Стратегия \\\"Умеренно-агрессивный портфель\\\"\"\n            },\n        ]\n    }\n];\n\nexport const screenWeb = [\n    {\n        code: \"marketplace\",\n        name: \"Витрина\",\n        param: \"srvUrl\",\n        options: [\n            {\n                code: \"investments\",\n                tab_id: 22,\n                name: \"Основная витрина инвестиций\",\n            },\n        ]\n    },\n]","import {platformNEW} from \"../__data__\";\nimport {useDispatch} from \"react-redux\";\nimport {addPlatform, webPlatform} from \"../__data__/actions/platformAction\";\nimport {useState} from \"react\";\n\nconst Platform = () => {\n    const [activePlatform, setActivePlatform] = useState(0)\n    const dispatch = useDispatch();\n\n    const handlePlatform = (item) => {\n        setActivePlatform(item.tab_id)\n        dispatch(addPlatform(item.base))\n        if(item.id === \"web\") {\n            dispatch(webPlatform())\n        }\n\n    }\n\n    return (\n        <div className={\"block\"}>\n            <p className={\"block-name\"}>Платформа</p>\n            <div className={\"block-wrapper\"}>\n                {platformNEW.map((item) => {\n                    return (\n                    <div className={\"block-item\"} key={item.id}>\n                        <input\n                            type={\"radio\"}\n                            name={\"platformNEW\"}\n                            id={`new${item.id}`}\n                            value={item.id}\n                            onChange={() => handlePlatform(item)}\n                            checked={item.tab_id === activePlatform}\n                        />\n                        <label htmlFor={`new${item.id}`}>{item.name}</label>\n                    </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Platform","import {ADD_PLATFORM, WEB_ACTIVE} from \"../consts\";\n\nexport const addPlatform = (value) => ({\n    type: ADD_PLATFORM,\n    data: value\n})\n\nexport const webPlatform = () => ({\n    type: WEB_ACTIVE,\n    data: true\n})","import {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {deeplinksNEW, deeplinksWeb} from \"../__data__\";\nimport {addDeeplink, addDeeplinkType} from \"../__data__/actions/deeplinkAction\";\n\nconst Deeplink = ({isChange}) => {\n    const [activeDeeplink, setActiveDeeplink] = useState(isChange)\n    const isWeb = useSelector(({Links}) => Links.web)\n    const dispatch = useDispatch();\n\n    const target = isWeb ? deeplinksWeb: deeplinksNEW\n\n    const handleDeeplink = (item) => {\n        setActiveDeeplink(item.id)\n        dispatch(addDeeplink(item.path))\n        dispatch(addDeeplinkType(item.id))\n    }\n\n    return (\n        <div className={\"block\"}>\n            <p className={\"block-name\"}>Куда перейти</p>\n            <div className={\"block-wrapper\"}>\n                {target.map((item) => {\n                    return (\n                        <div className={\"block-item\"} key={item.id}>\n                            <input\n                                type={\"radio\"}\n                                name={\"targetNEW\"}\n                                id={`new${item.id}`}\n                                value={item.path}\n                                onChange={() => handleDeeplink(item)}\n                                checked={item.id === activeDeeplink}\n                            />\n                            <label htmlFor={`new${item.id}`}>{item.name}</label>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Deeplink;","import {ADD_DEEPLINK, ADD_DEEPLINK_TYPE} from \"../consts\";\n\nexport const addDeeplink = (value) => ({\n    type: ADD_DEEPLINK,\n    data: value\n})\n\nexport const addDeeplinkType = (value) => ({\n    type: ADD_DEEPLINK_TYPE,\n    data: value\n})","import {ADD_SCREEN} from \"../consts\";\n\nexport const addScreen = (value) => ({\n    type: ADD_SCREEN,\n    data: value\n})","import {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {screen, screenWeb} from \"../__data__\";\nimport {addScreen} from \"../__data__/actions/screenAction\";\n\nconst Screen = () => {\n    const [activeScreen, setActiveScreen] = useState(0)\n    const deeplinkType = useSelector(({Links}) => Links.deeplinkType)\n    const dispatch = useDispatch();\n    const isWeb = useSelector(({Links}) => Links.web)\n    const target = isWeb ? screenWeb : screen\n    const screenItems = target.find(item => item.code === deeplinkType)\n\n    const handleDeeplink = (item) => {\n        setActiveScreen(item.code)\n        if(isWeb) {\n            dispatch(addScreen(`?${screenItems.param}=%2F${item.code}`))\n        } else {\n            dispatch(addScreen(`?${screenItems.param}=${item.code}`))\n        }\n    }\n\n\n    return (\n        <div className={\"block\"}>\n            <p className={\"block-name\"}>Экран</p>\n            <div className={\"block-wrapper\"}>\n                {screenItems.options.map((item) => {\n                        return (\n                            <div className={\"block-item\"} key={item.code}>\n                                <input\n                                    type={\"radio\"}\n                                    name={\"screenNEW\"}\n                                    id={`new${item.code}`}\n                                    value={item.code}\n                                    onChange={() => handleDeeplink(item)}\n                                    checked={item.code === activeScreen}\n                                />\n                                <label htmlFor={`new${item.code}`}>{item.name}</label>\n                            </div>\n                        )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Screen","import {ADD_INTERNAL_SOURCE} from \"../consts\";\n\nexport const addInternalSource = (value) => ({\n    type: ADD_INTERNAL_SOURCE,\n    data: value\n})","import {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {internalSources, internalSourceWeb} from \"../__data__\";\nimport {addInternalSource} from \"../__data__/actions/internalSourceAction\";\n\nconst InternalSource = () => {\n    const [activeSource, setActiveSource] = useState(null)\n    const dispatch = useDispatch();\n    const isWeb = useSelector(({Links}) => Links.web)\n    const target = isWeb ? internalSourceWeb : internalSources\n\n    const handleDeeplink = (item) => {\n        setActiveSource(item.code)\n        if(item.code !== \"\" && !isWeb){\n            dispatch(addInternalSource(`&internal_source=${item.code}`))\n        } else if (isWeb){\n            dispatch(addInternalSource(`?from=${item.code}`))\n        } else {\n            dispatch(addInternalSource(``))\n        }\n\n    }\n\n    return (\n        <div className={\"block\"}>\n            <p className={\"block-name\"}>Внутренний переход</p>\n            <div className={\"block-wrapper\"}>\n                {target.map((item) => {\n                    return (\n                        <div className={\"block-item\"} key={item.code}>\n                            <input\n                                type={\"radio\"}\n                                name={\"internalSourceNEW\"}\n                                id={`new${item.code}`}\n                                value={item.code}\n                                onChange={() => handleDeeplink(item)}\n                                checked={item.code === activeSource}\n                            />\n                            <label htmlFor={`new${item.code}`}>{item.name}</label>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default InternalSource","import {ADD_EXTERNAL_SOURCE} from \"../consts\";\n\nexport const addExternalSource = (value) => ({\n    type: ADD_EXTERNAL_SOURCE,\n    data: value\n})","import {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {externalSourcesNEW, externalSourcesWeb} from \"../__data__\";\n\nimport {addExternalSource} from \"../__data__/actions/externalSourceAction\";\n\nconst ExternalSource = () => {\n    const [activeSource, setActiveSource] = useState(\"\")\n\n    const [activeUtmSource, setActiveUtmSource] = useState(\"\")\n    const [activeUtmMedium, setActiveUtmMedium] = useState(\"\")\n    const [activeUtmCompaign, setActiveUtmCompaign] = useState(\"\")\n    const [activeUtmContent, setActiveUtmContent] = useState(\"\")\n    const [activeUtmTerm, setActiveUtmTerm] = useState(\"\")\n\n    const dispatch = useDispatch();\n\n    const isWeb = useSelector(({Links}) => Links.web)\n    const target = isWeb ? externalSourcesWeb : externalSourcesNEW\n\n    useEffect(() => {\n        if(activeSource === \"other\") {\n            dispatch(addExternalSource(`&utm_source=${activeUtmSource}&utm_medium=${activeUtmMedium}&utm_compaign=${activeUtmCompaign}&utm_content=${activeUtmContent}&utm_term=${activeUtmTerm}`))\n        }\n    }, [dispatch, activeSource, activeUtmSource, activeUtmMedium, activeUtmCompaign, activeUtmContent, activeUtmTerm])\n\n    const handleDeeplink = (item) => {\n        setActiveSource(item.code)\n        if(item.code !== \"empty\" && item.code !== \"other\" && !isWeb){\n            dispatch(addExternalSource(`&external_source=${item.code}`))\n        } else if (item.code === \"other\" && item.code !== \"empty\"){\n            dispatch(addExternalSource(`&utm_source=${activeUtmSource}&utm_medium=${activeUtmMedium}&utm_compaign=${activeUtmCompaign}&utm_content=${activeUtmContent}&utm_term=${activeUtmTerm}`))\n        } else if (isWeb && item.code !== \"empty\") {\n            dispatch(addExternalSource(`?from=${item.code}`))\n        } else {\n            dispatch(addExternalSource(``))\n        }\n    }\n\n    return (\n        <div className={\"block\"}>\n            <p className={\"block-name\"}>Внешний переход</p>\n            <div className={\"block-wrapper\"}>\n                {target.map((item) => {\n                    return (\n                        <div className={\"block-item\"} key={item.code}>\n                            <input\n                                type={\"radio\"}\n                                name={\"externalSourceNEW\"}\n                                id={`new${item.code}`}\n                                value={item.code}\n                                onChange={() => handleDeeplink(item)}\n                                checked={item.code === activeSource}\n                            />\n                            <label htmlFor={`new${item.code}`}>{item.name}</label>\n                        </div>\n                    )\n                })}\n                <div className={\"block-input\"}>\n                    <label>utm_source</label>\n                    <input\n                        type={\"text\"}\n                        name={\"utm_source\"}\n                        id={\"newutem_source\"}\n                        value={activeUtmSource}\n                        onChange={(e) => setActiveUtmSource(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <label>utm_medium</label>\n                    <input\n                        type={\"text\"}\n                        name={\"utm_medium\"}\n                        id={\"newutm_medium\"}\n                        value={activeUtmMedium}\n                        onChange={(e) => setActiveUtmMedium(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <label>utm_compaign</label>\n                    <input\n                        type={\"text\"}\n                        name={\"utm_compaign\"}\n                        id={\"newutm_compaign\"}\n                        value={activeUtmCompaign}\n                        onChange={(e) => setActiveUtmCompaign(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <label>utm_content</label>\n                    <input\n                        type={\"text\"}\n                        name={\"utm_content\"}\n                        id={\"newutm_content\"}\n                        value={activeUtmContent}\n                        onChange={(e) => setActiveUtmContent(e.currentTarget.value)}\n                    />\n                </div>\n                <div className={\"block-input\"}>\n                    <label>utm_term</label>\n                    <input\n                        type={\"text\"}\n                        name={\"utm_term\"}\n                        id={\"newutem_term\"}\n                        value={activeUtmTerm}\n                        onChange={(e) => setActiveUtmTerm(e.currentTarget.value)}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ExternalSource","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport QRCode from \"qrcode.react\"\n\nconst QrCode = () => {\n    const path = useSelector((({Links}) => Links.link))\n    return(\n        <QRCode value={path}/>\n    )\n}\n\nexport default QrCode","const Reload = () => {\n    return(\n        <div className={\"reload\"}>\n        <p>Перед изменением \"Платформы\", \"Куда перейти\" и \"Экран\" следует перезагрузить страницу</p>\n            <button onClick={() => window.location.reload()}>ПЕРЕЗАГРУЗИТЬ</button>\n        </div>\n    )\n}\n\nexport default Reload;","import {useSelector} from \"react-redux\";\n\nconst Info = () => {\n    const links = useSelector(({Links}) => Links)\n\n    return(\n        <div>\n            <p>platform: {links.platform}</p>\n            <p>deeplinkType: {links.deeplinkType}</p>\n            <p>deeplink: {links.deeplink}</p>\n            <p>screen: {links.screen}</p>\n            <p>internalSource: {links.internalSource}</p>\n            <p>externalSource: {links.externalSource}</p>\n        </div>\n    )\n}\n\nexport default Info;","import './App.css';\nimport {Deeplink, ExternalSource, Info, InternalSource, Link, Platform, QrCode, Reload, Screen} from \"./components\";\n\n\nconst AppFunc = () => {\n\n    return (\n        <div className={\"container\"}>\n            <Link/>\n            <div className={\"wrapper\"}>\n                <Platform/>\n                <Deeplink/>\n                <Screen/>\n                <InternalSource/>\n                <ExternalSource/>\n            </div>\n            <QrCode/>\n            <Reload/>\n            <Info/>\n        </div>\n    )\n}\n\nexport default AppFunc;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./__data__/store\";\nimport AppFunc from \"./AppFunc\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <AppFunc/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}